<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Library Management - Issued Books Report</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
</head>
<body class="bg-gradient-to-br from-gray-50 to-gray-100 min-h-screen">
    <!-- Header Section -->
    <header class="bg-white shadow-md py-6 px-4 mb-8">
        <div class="max-w-7xl mx-auto flex justify-between items-center">
            <div>
                <h1 class="text-3xl font-bold text-gray-800">Issued Books Report</h1>
                <p class="text-gray-600 mt-1">Library Management System</p>
            </div>
            <a href="/Librarian" class="flex items-center gap-2 text-blue-600 hover:text-blue-800 transition">
                <i class="fas fa-arrow-left"></i>
                <span>Back to Dashboard</span>
            </a>
        </div>
    </header>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4">
        <!-- Filters and Search -->
        <div class="bg-white rounded-lg shadow-md p-4 mb-6">
            <div class="flex flex-wrap gap-4 items-center justify-between">
                <div class="flex-1 min-w-[300px]">
                    <input type="text" id="searchInput" placeholder="Search by email, book title, or ID..." 
                           class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition">
                </div>
                <div class="flex gap-4">
                    <select id="filterStatus" class="px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition">
                        <option value="all">All Books</option>
                        <option value="overdue">Overdue Only</option>
                        <option value="current">Current Only</option>
                    </select>
                    <button onclick="exportToCSV()" class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 transition flex items-center gap-2">
                        <i class="fas fa-download"></i>
                        Export CSV
                    </button>
                </div>
            </div>
        </div>

        <!-- Table Section -->
        <div class="bg-white rounded-lg shadow-md overflow-hidden">
            <div class="overflow-x-auto">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">User Email</th>
                            <th class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Book ID</th>
                            <th class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Book Title</th>
                            <th class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Issue Date</th>
                            <th class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Due Date</th>
                            <th class="px-6 py-4 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Fine Status</th>
                        </tr>
                    </thead>
                    <tbody class="bg-white divide-y divide-gray-200">
                        <% if (Users.length > 0) { %>
                            <% Users.forEach(function(user) { %>
                                <% for(let i = 0; i < user.IssuedBook.length; i++) { %>
                                    <% const returnDate = new Date(user.IssuedBook[i].RDate); %>
                                    <% const issueDate = new Date(user.IssuedBook[i].IDate); %>
                                    <% const today = new Date(); %>
                                    <% let fine = 0; %>
                                    <% const finePerDay = 2; %>
                                    <% let overdueDays = 0; %>
                                    
                                    <% if (today > returnDate) { %>
                                        <% overdueDays = Math.ceil((today - returnDate) / (1000 * 60 * 60 * 24)); %>
                                        <% fine = overdueDays * finePerDay; %>
                                    <% } %>
                                    
                                    <tr class="hover:bg-gray-50 transition-colors">
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <div class="flex items-center">
                                                <div class="h-8 w-8 bg-gray-100 rounded-full flex items-center justify-center">
                                                    <i class="fas fa-user text-gray-500"></i>
                                                </div>
                                                <span class="ml-3 text-sm text-gray-900"><%= user.email %></span>
                                            </div>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                            <%= user.IssuedBook[i].Ibook.LbookId %>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                            <%= user.IssuedBook[i].Ibook.bookDetails.title %>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                            <%= issueDate.toLocaleDateString() %>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                                            <%= returnDate.toLocaleDateString() %>
                                        </td>
                                        <td class="px-6 py-4 whitespace-nowrap">
                                            <% if(fine) { %>
                                                <div class="flex items-center">
                                                    <span class="px-3 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800">
                                                        Overdue <%=overdueDays%> days
                                                    </span>
                                                    <span class="ml-2 text-sm text-red-600 font-medium">
                                                        â‚¹<%= fine %>
                                                    </span>
                                                </div>
                                            <% } else { %>
                                                <span class="px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                                    On Time
                                                </span>
                                            <% } %>
                                        </td>
                                    </tr>
                                <% } %>
                            <% }) %>
                        <% } else { %>
                            <tr>
                                <td colspan="6" class="px-6 py-12 text-center text-gray-500">
                                    <div class="flex flex-col items-center">
                                        <i class="fas fa-book-open text-4xl mb-4"></i>
                                        <p>No issued books found</p>
                                    </div>
                                </td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>
    </main>

    <script>
        // Search functionality
        document.getElementById('searchInput').addEventListener('keyup', function() {
            const searchText = this.value.toLowerCase();
            const rows = document.querySelectorAll('tbody tr');
            
            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchText) ? '' : 'none';
            });
        });

        // Filter functionality
        document.getElementById('filterStatus').addEventListener('change', function() {
            const filter = this.value;
            const rows = document.querySelectorAll('tbody tr');
            
            rows.forEach(row => {
                if (filter === 'all') {
                    row.style.display = '';
                } else if (filter === 'overdue') {
                    const hasOverdue = row.querySelector('.bg-red-100');
                    row.style.display = hasOverdue ? '' : 'none';
                } else if (filter === 'current') {
                    const hasOverdue = row.querySelector('.bg-red-100');
                    row.style.display = !hasOverdue ? '' : 'none';
                }
            });
        });

        // Export to CSV functionality
        function exportToCSV() {
            const rows = document.querySelectorAll('tbody tr');
            let csvContent = "User Email,Book ID,Book Title,Issue Date,Due Date,Fine\n";
            
            rows.forEach(row => {
                if (row.style.display !== 'none') {
                    const cells = row.querySelectorAll('td');
                    const rowData = Array.from(cells).map(cell => {
                        // Clean the text content
                        return `"${cell.textContent.trim().replace(/"/g, '""')}"`;
                    });
                    csvContent += rowData.join(',') + '\n';
                }
            });

            const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement("a");
            const url = URL.createObjectURL(blob);
            link.setAttribute("href", url);
            link.setAttribute("download", "library_report.csv");
            link.style.visibility = 'hidden';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    </script>
</body>
</html>